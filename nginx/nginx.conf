# MSA로 전환하기 전 conf
# worker_processes 1;

# events {
# 	worker_connections 1024;
# }

# http {
# 	include       /etc/nginx/mime.types;
# 	server {
# 		listen 80;

# 		return 301 https://$host$request_uri;
# 	}

# 	server {
# 		listen 443 ssl;

# 		ssl_certificate /etc/ssl/certs/localhost.dev.crt;
#   		ssl_certificate_key /etc/ssl/private/localhost.dev.key;

# 		ssl_protocols	TLSv1.2 TLSv1.3;


# 		location / {
# 			root /usr/share/nginx/html;
# 			try_files $uri /index.html;
# 		}

# 		# api
# 		location ~ ^/api/(.*)$ {
# 			proxy_pass http://backend:8000/$1$is_args$args;
# 			proxy_http_version 1.1;

# 			# django 서버로 csrf token 전달
# 			proxy_set_header X-CSRFToken $http_x_csrf_token;

# 			proxy_set_header Host $http_host;
# 			proxy_set_header X-Real-IP $remote_addr;
# 			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# 			proxy_set_header X-Forwarded-Proto $scheme;
# 			proxy_set_header Referer $http_referer;
# 		}

# 		# websocket
# 		location /ws/ {
# 			proxy_pass http://backend:8000;
# 			proxy_http_version 1.1;

# 			proxy_set_header Upgrade $http_upgrade;
# 			proxy_set_header Connection "upgrade";
# 			proxy_set_header Host $http_host;
# 			proxy_set_header X-Real-IP $remote_addr;
# 			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# 			proxy_set_header X-Forwarded-Proto $scheme;
# 			proxy_read_timeout 86400;
# 		}
# 	}
# }


# MSA 로 전환된 Backend
worker_processes 1;

events {
	worker_connections 1024;
}

http {
	include       /etc/nginx/mime.types;

	resolver 127.0.0.11 valid=30s;
	
	server {
		listen 80;

		return 301 https://$host$request_uri;
	}

	server {
		listen 443 ssl;

		ssl_certificate /etc/ssl/certs/localhost.dev.crt;
  		ssl_certificate_key /etc/ssl/private/localhost.dev.key;

		ssl_protocols	TLSv1.2 TLSv1.3;


		location / {
			root /usr/share/nginx/html;
			try_files $uri /index.html;
		}

		# 유저관리 api
		location ~ ^/api/users/(.*)$ {
			proxy_pass http://server-user:8001/users/$1$is_args$args;
			proxy_http_version 1.1;

			# django 서버로 csrf token 전달
			proxy_set_header X-CSRFToken $http_x_csrf_token;

			proxy_set_header Host $http_host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header Referer $http_referer;
		}

		# 인증관리 api
		location ~ ^/api/auth/(.*)$ {
			proxy_pass http://server-auth:8002/auth/$1$is_args$args;
			proxy_http_version 1.1;

			# django 서버로 csrf token 전달
			proxy_set_header X-CSRFToken $http_x_csrf_token;

			proxy_set_header Host $http_host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header Referer $http_referer;
		}

		# 게임관리 api
		location ~ ^/api/games/(.*)$ {
			proxy_pass http://server-game:8000/games/$1$is_args$args;
			proxy_http_version 1.1;

			# django 서버로 csrf token 전달
			proxy_set_header X-CSRFToken $http_x_csrf_token;

			proxy_set_header Host $http_host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header Referer $http_referer;
		}

		# game websocket
		location /ws/game/ {
			proxy_pass http://server-game:8000;
			proxy_http_version 1.1;

			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			proxy_set_header Host $http_host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_read_timeout 86400;
		}

		# status websocket
		location /ws/status/ {
			proxy_pass http://server-user:8001;
			proxy_http_version 1.1;

			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			proxy_set_header Host $http_host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_read_timeout 86400;
		}
	}
}