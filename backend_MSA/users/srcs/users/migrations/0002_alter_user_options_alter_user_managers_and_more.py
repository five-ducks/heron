# Generated by Django 5.0.7 on 2024-11-19 12:11

import django.contrib.auth.models
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='user',
            options={'verbose_name': 'user', 'verbose_name_plural': 'users'},
        ),
        migrations.AlterModelManagers(
            name='user',
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.RemoveField(
            model_name='user',
            name='nickname',
        ),
        migrations.AddField(
            model_name='user',
            name='date_joined',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined'),
        ),
        migrations.AddField(
            model_name='user',
            name='email',
            field=models.EmailField(blank=True, max_length=254, verbose_name='email address'),
        ),
        migrations.AddField(
            model_name='user',
            name='first_name',
            field=models.CharField(blank=True, max_length=150, verbose_name='first name'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_staff',
            field=models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_superuser',
            field=models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status'),
        ),
        migrations.AddField(
            model_name='user',
            name='last_login',
            field=models.DateTimeField(blank=True, null=True, verbose_name='last login'),
        ),
        migrations.AddField(
            model_name='user',
            name='last_name',
            field=models.CharField(blank=True, max_length=150, verbose_name='last name'),
        ),
        migrations.AddField(
            model_name='user',
            name='lose_cnt',
            field=models.IntegerField(default=0, help_text='User lose count'),
        ),
        migrations.AddField(
            model_name='user',
            name='status',
            field=models.IntegerField(choices=[(0, '오프라인'), (1, '온라인'), (2, '게임중')], default=0, help_text='User activity status'),
        ),
        migrations.AddField(
            model_name='user',
            name='status_msg',
            field=models.CharField(blank=True, default='텍스트를 입력해주세요', help_text="User custom status message, default is '텍스트를 입력해주세요'", max_length=100),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='user',
            name='win_cnt',
            field=models.IntegerField(default=0, help_text='User win count'),
        ),
        migrations.AlterField(
            model_name='user',
            name='exp',
            field=models.IntegerField(default=0, help_text='Experience points accumulated by the user.'),
        ),
        migrations.AlterField(
            model_name='user',
            name='macrotext1',
            field=models.CharField(blank=True, default='텍스트를 입력해주세요', help_text="Macro text 1, default is '텍스트를 입력해주세요'.", max_length=100),
        ),
        migrations.AlterField(
            model_name='user',
            name='macrotext2',
            field=models.CharField(blank=True, default='텍스트를 입력해주세요', help_text="Macro text 2, default is '텍스트를 입력해주세요'.", max_length=100),
        ),
        migrations.AlterField(
            model_name='user',
            name='macrotext3',
            field=models.CharField(blank=True, default='텍스트를 입력해주세요', help_text="Macro text 3, default is '텍스트를 입력해주세요'.", max_length=100),
        ),
        migrations.AlterField(
            model_name='user',
            name='macrotext4',
            field=models.CharField(blank=True, default='텍스트를 입력해주세요', help_text="Macro text 4, default is '텍스트를 입력해주세요'.", max_length=100),
        ),
        migrations.AlterField(
            model_name='user',
            name='macrotext5',
            field=models.CharField(blank=True, default='텍스트를 입력해주세요', help_text="Macro text 5, default is '텍스트를 입력해주세요'.", max_length=100),
        ),
        migrations.AlterField(
            model_name='user',
            name='password',
            field=models.CharField(max_length=128, verbose_name='password'),
        ),
        migrations.AlterField(
            model_name='user',
            name='profile_img',
            field=models.IntegerField(choices=[(0, '피카츄'), (1, '파이리'), (2, '이상해씨'), (3, '꼬부기'), (4, '이브이'), (5, '잠만보'), (6, '뮤'), (7, '메타몽')], default=0, help_text='Profile image ID for the user, selectable from predefined options.'),
        ),
        migrations.AlterField(
            model_name='user',
            name='username',
            field=models.CharField(help_text='User unique id', max_length=150, unique=True),
        ),
    ]
