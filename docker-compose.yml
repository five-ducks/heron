services:
  backend:
    build: backend/
    container_name: backend
    ports:
      - 8000:8000
    volumes:
      - ./backend:/app
    env_file: ./.env
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_EMAIL=admin@example.com
      - DJANGO_SUPERUSER_PASSWORD=1234
    depends_on:
      - db
    networks:
      - pingpong_net

  db:
    image: postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    expose:
      - 5432
    volumes:
      - db_data:/var/lib/postgresql/data
    container_name: postgres
    env_file: ./.env
    networks:
      - pingpong_net

  nginx:
    build: nginx/
    ports:
      - 80:80
      - 443:443
    container_name: nginx
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
    restart: always
    depends_on:
      - backend
    networks:
      - pingpong_net

networks:
  pingpong_net:
    name: pingpong_net
    driver: bridge

volumes:
  db_data:
    name: db_data
    driver: local
