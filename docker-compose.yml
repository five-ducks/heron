services:
  backend:
    container_name: backend
    build: backend/
    ports:
      - 8000:8000
    volumes:
      - ./backend:/app
    networks:
      - pingpong_net
    env_file:
      - .env
    restart: always
    depends_on:
      db:
        condition: service_healthy

  db:
    container_name: postgres
    image: postgres
    expose:
      - 5432
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - pingpong_net
    env_file:
      - .env
    restart: always
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 3

  nginx:
    container_name: nginx
    build: nginx/
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
    networks:
      - pingpong_net
    restart: always
    depends_on:
      - backend

networks:
  pingpong_net:
    name: pingpong_net
    driver: bridge

volumes:
  db_data:
    name: db_data
    driver: local
